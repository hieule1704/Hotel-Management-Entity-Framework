<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>📌 Giới thiệu
Phần mềm Quản Lý Khách Sạn giúp khách sạn quản lý hiệu quả các thông tin về khách hàng, đặt phòng, phòng nghỉ, dịch vụ đi kèm, thanh toán và nhân viên. Giao diện trực quan, dễ sử dụng, phù hợp với cả lễ tân lẫn quản lý khách sạn.

🧑‍💼 1. Quản lý khách hàng (FormKhachHang)

Xem danh sách khách hàng cùng thông tin chi tiết: họ tên, số điện thoại, CCCD, quốc tịch...

Thêm/Sửa/Xóa khách hàng.

Tự động kiểm tra trùng lặp số điện thoại/CCCD.

Tìm kiếm nhanh khách hàng theo tên hoặc số phòng đã từng ở.

🏨 2. Quản lý phòng (FormPhong)

Quản lý thông tin phòng: số phòng, loại phòng (đơn/đôi/VIP), giá, tình trạng (trống, đã đặt, đang ở, đang dọn dẹp).

Thêm/Sửa/Xóa phòng nghỉ.

Cập nhật trạng thái phòng theo thời gian thực.

Tìm kiếm, lọc phòng theo loại, giá, tình trạng.

📅 3. Quản lý đặt phòng (FormDatPhong)

Chọn khách hàng và phòng cần đặt.

Chọn ngày nhận - ngày trả bằng DateTimePicker.

Tự động tính số ngày lưu trú và dự kiến chi phí.

Cảnh báo nếu phòng đã có người đặt trong thời gian trùng lặp.

Ghi nhận trạng thái "đã nhận phòng" hoặc "đã hủy".

🧾 4. Quản lý dịch vụ (FormDichVu)

Danh sách các dịch vụ đi kèm: giặt ủi, ăn uống, thuê xe, spa...

Thêm/Sửa/Xóa dịch vụ.

Gán dịch vụ cho từng phòng/khách.

Tự động tính tổng tiền dịch vụ khi thanh toán.

💵 5. Quản lý thanh toán (FormThanhToan)

Tổng hợp chi phí phòng và dịch vụ của từng khách.

Tính số ngày ở, giá phòng, dịch vụ sử dụng, giảm giá (nếu có).

Hỗ trợ in hóa đơn hoặc lưu file PDF.

Cập nhật trạng thái phòng sau khi thanh toán.

👨‍🔧 6. Quản lý nhân viên (FormNhanVien)

Quản lý danh sách nhân viên: lễ tân, dọn phòng, bảo trì, quản lý...

Thêm/Sửa/Xóa thông tin nhân viên.

Phân công vị trí và ca làm việc.

⚙️ Chức năng chung
Tất cả các form đều hỗ trợ các thao tác:

Thêm: Nhập mới dữ liệu.

Sửa: Chỉnh sửa bản ghi hiện tại.

Xóa: Xóa bản ghi đã chọn.

Lưu: Ghi lại thông tin sau khi nhập hoặc sửa.

Hủy: Hủy thao tác hiện tại.

Thoát: Đóng form.

📄 Ghi chú

Vui lòng nhập đúng định dạng ngày/tháng/năm.

Dữ liệu được lưu vào cơ sở dữ liệu SQL Server.

Nếu có lỗi xảy ra, kiểm tra kết nối cơ sở dữ liệu hoặc liên hệ quản trị hệ thống.</value>
  </data>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>133, 17</value>
  </metadata>
</root>